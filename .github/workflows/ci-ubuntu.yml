name: CMake

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally
    # well on Windows or Mac.  You can convert this to a matrix build if you need
    # cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest]
        BUILD_TYPE: ["Release", "Debug"]
        QUERY: ["ON", "OFF"]
        SAX: ["ON", "OFF"]
        XPATH: ["ON", "OFF"]

    steps:
      - uses: actions/checkout@v2

      - name: Configure Build Directory
        run: mkdir build

      - name: Configure CMake
        # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
        # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
        run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{matrix.BUILD_TYPE}} -DCXML_USE_QUERY_MOD=${{matrix.QUERY}} -DCXML_USE_SAX_MOD=${{matrix.SAX}} -DCXML_USE_XPATH_MOD=${{matrix.XPATH}} -DCXML_BUILD_TESTS=ON -DCMAKE_C_STANDARD=11

      - name: Build
        # Build your program with the given configuration
        run: cmake --build ${{github.workspace}}/build

      - name: Test
        working-directory: ${{github.workspace}}/build
        # Execute tests defined by the CMake configuration.
        # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
        run: make full_test
